{
    // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }

    "Express boilerplate": {
        "prefix": "expressboil",
        "body": [
            "const express = require('express');",
            "const app = express()\n",
            "const port = process.env.port || process.env.PORT || ${1:8080};\n",
            "app.get('/', (req, res) => {",
            "\tres.send('Hello World!');",
            "\t$0",
            "});\n",
            "app.listen(port);\n",
            "console.log('Listening on http://localhost:' + port);"
        ],
        "description": "Simple Hello World Express.js server."
    },

    "Mongoose class": {
        "prefix": "mongooseclass",
        "body": [
            "const mongoose = require('mongoose');\n",
            "const ${1:kitten}Schema = new mongoose.Schema({",
            "\t${0:name: String,\n\tlives: Number,\n\tbirthdate: {type: Date, default: Date.now\\}}",
            "});\n",
            "module.exports = mongoose.model('${2:Kitten}', ${1:kitten}Schema);"
        ],
        "description": "Mongoose class as a module."
    }
}
